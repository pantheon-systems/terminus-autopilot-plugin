name: Test & Build
on:
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      functional_tests_group:
        description: Run arbitrary functional tests group by name or all (short and long) tests (default)
        required: true
        default: all
      tmate_enabled:
        description: Enable tmate debugging
        required: true
        default: "0"
jobs:
  # Checkout in separate job because docker image is alpine based and checkout action doesn't work.
  checkout_build:
    runs-on: ubuntu-latestan I
    name: Checkout & Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
      - name: Full Composer Install
        run: composer install
      - name: Validate Code
        run: composer lint
  phpcompatibility:
    runs-on: ubuntu-latest
    name: PHP Compatibility
    needs:
      - checkout_build
    steps:
      - name: Download repo content from artifact
        uses: actions/download-artifact@v4
        with:
          name: full-workspace
      - name: PHPCompatibility
        uses: pantheon-systems/phpcompatibility-action@v1
        with:
          test-versions: 7.4-8.3
          paths: ${{ github.workspace }}/src

  functional:
    runs-on: ${{ matrix.operating-system }}
    name: Functional testing matrix - PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }}
    if: ${{ github.repository_owner == 'pantheon-systems' }}
    strategy:
      matrix:
        operating-system: [ 'macos-latest' ]
        php-versions: [ '7.4', '8.3' ]
        terminus-versions: ['3.6.2', '4.0.1'] # TODO: Make this "latest" instead of 4
      max-parallel: 3
    env:
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
      TERMINUS_SITE: ${{ secrets.TERMINUS_SITE }}
      TERMINUS_ORG: ${{ secrets.TERMINUS_ORG }}
      TERMINUS_ALLOW_UNSUPPORTED_NEWER_PHP: true
      TERMINUS_VERSION: ${{ matrix.terminus-versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: gd, mbstring, zip, ssh2-1.3.1, pcov
          coverage: pcov
          ini-values: error_reporting=E_ALL
      - name: Full Composer Install
        run: composer install
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-public-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Install Terminus
        uses: pantheon-systems/terminus-github-actions@main
        with:
          pantheon-machine-token: ${{ secrets.TERMINUS_TOKEN }}
          terminus-version: ${{ env.TERMINUS_VERSION }}
      - name: Setup tmate session
        if: ${{ github.event.inputs.tmate_enabled == 1 }}
        uses: mxschmitt/action-tmate@v3
      - name: Run e2e test
        run: bash ${GITHUB_WORKSPACE}/.github/e2e.sh
        env:
          pantheon-machine-token: ${{ secrets.TERMINUS_TOKEN }}
          terminus-version: ${{ env.TERMINUS_VERSION }}
